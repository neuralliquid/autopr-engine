{
  "folders": [
    {
      "name": "AutoPR Engine",
      "path": "."
    }
  ],
  "settings": {
    "python.defaultInterpreterPath": "./venv/bin/python",
    "python.terminal.activateEnvironment": true,
    "python.testing.pytestEnabled": true,
    "python.testing.pytestArgs": ["tests"],
    "python.linting.enabled": true,
    "python.linting.flake8Enabled": true,
    "python.linting.mypyEnabled": true,
    "python.linting.banditEnabled": true,
    "python.formatting.provider": "black",
    "python.sortImports.args": ["--profile", "black"],
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit",
      "source.fixAll": "explicit"
    },
    "files.exclude": {
      "**/__pycache__": true,
      "**/*.pyc": true,
      "**/*.pyo": true,
      "**/*.egg-info": true,
      "**/node_modules": true,
      "**/.pytest_cache": true,
      "**/.mypy_cache": true,
      "**/dist": true,
      "**/build": true
    },
    "search.exclude": {
      "**/__pycache__": true,
      "**/*.pyc": true,
      "**/node_modules": true,
      "**/.pytest_cache": true,
      "**/.mypy_cache": true,
      "**/dist": true,
      "**/build": true
    },
    "yaml.schemas": {
      "https://json.schemastore.org/github-workflow.json": ".github/workflows/*.yml",
      "https://json.schemastore.org/docker-compose.json": "docker-compose*.yml"
    },
    "files.associations": {
      "*.yml": "yaml",
      "*.yaml": "yaml",
      "Dockerfile*": "dockerfile",
      ".env*": "properties"
    },
    "terminal.integrated.env.linux": {
      "PYTHONPATH": "${workspaceFolder}"
    },
    "terminal.integrated.env.osx": {
      "PYTHONPATH": "${workspaceFolder}"
    },
    "terminal.integrated.env.windows": {
      "PYTHONPATH": "${workspaceFolder}"
    },
    "coverage-gutters.coverageFileNames": ["coverage.xml", "coverage.lcov", ".coverage"],
    "github.copilot.enable": {
      "*": true,
      "yaml": true,
      "plaintext": false,
      "markdown": true
    },
    "github.copilot.editor.enableAutoCompletions": true,
    "codeium.enableConfig": {
      "*": true
    },
    "continue.telemetryEnabled": false,
    "continue.enableTabAutocomplete": true,
    "tabnine.experimentalAutoImports": true,
    "aiXcoder.autoTrigger": true,
    "codegpt.query.language": "English",
    "codegpt.query.maxTokens": 1000,
    "workbench.colorTheme": "GitHub Dark Default",
    "workbench.iconTheme": "material-icon-theme",
    "git.enableSmartCommit": false,
    "git.confirmSync": false,
    "git.autofetch": false,
    "git.showPushSuccessNotification": false,
    "git.showCommitInput": false,
    "dockerView.autoRefresh": true,
    "thunder-client.saveToWorkspace": true,
    "rest-client.environmentVariables": {
      "local": {
        "baseUrl": "http://localhost:8080",
        "apiToken": "development"
      },
      "staging": {
        "baseUrl": "https://staging-autopr.neuralliquid.com",
        "apiToken": "{{$dotenv AUTOPR_API_TOKEN}}"
      },
      "production": {
        "baseUrl": "https://autopr.neuralliquid.com",
        "apiToken": "{{$dotenv AUTOPR_PROD_API_TOKEN}}"
      }
    },
    "cSpell.words": [
      "Alertmanager",
      "Fernet",
      "FINRA",
      "FURB",
      "PKCE",
      "retryable",
      "SPIFFE",
      "temporalio"
    ]
  },
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "Install Dependencies",
        "type": "shell",
        "command": "pip install -r requirements.txt -r requirements-dev.txt",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        }
      },
      {
        "label": "Run Tests",
        "type": "shell",
        "command": "pytest tests/ -v --cov=autopr --cov-report=xml --cov-report=html",
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        }
      },
      {
        "label": "Format Code",
        "type": "shell",
        "command": "black . && isort .",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        }
      },
      {
        "label": "Lint Code",
        "type": "shell",
        "command": "flake8 . && mypy autopr/",
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        }
      },
      {
        "label": "Security Scan",
        "type": "shell",
        "command": "bandit -r autopr/ && safety check",
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        }
      },
      {
        "label": "Start Development Server",
        "type": "shell",
        "command": "python -m autopr.server --reload --debug",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "isBackground": true
      },
      {
        "label": "Docker Build",
        "type": "shell",
        "command": "docker build -t autopr-engine:dev .",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        }
      },
      {
        "label": "Docker Compose Up",
        "type": "shell",
        "command": "docker-compose up -d",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        }
      }
    ]
  },
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "name": "AutoPR Engine Server",
        "type": "python",
        "request": "launch",
        "program": "${workspaceFolder}/autopr/server.py",
        "args": ["--debug", "--reload"],
        "console": "integratedTerminal",
        "env": {
          "PYTHONPATH": "${workspaceFolder}",
          "AUTOPR_DEBUG": "true"
        },
        "envFile": "${workspaceFolder}/.env"
      },
      {
        "name": "AutoPR CLI",
        "type": "python",
        "request": "launch",
        "program": "${workspaceFolder}/autopr/cli.py",
        "args": ["--help"],
        "console": "integratedTerminal",
        "env": {
          "PYTHONPATH": "${workspaceFolder}"
        },
        "envFile": "${workspaceFolder}/.env"
      },
      {
        "name": "Run Tests (Current File)",
        "type": "python",
        "request": "launch",
        "program": "${workspaceFolder}/venv/bin/pytest",
        "args": ["${file}", "-v"],
        "console": "integratedTerminal",
        "env": {
          "PYTHONPATH": "${workspaceFolder}"
        }
      },
      {
        "name": "Docker Debug",
        "type": "python",
        "request": "attach",
        "connect": {
          "host": "localhost",
          "port": 5678
        },
        "pathMappings": [
          {
            "localRoot": "${workspaceFolder}",
            "remoteRoot": "/app"
          }
        ]
      }
    ]
  },
  "extensions": {
    "recommendations": [
      "ms-python.python",
      "ms-python.flake8",
      "ms-python.mypy-type-checker",
      "ms-python.black-formatter",
      "ms-python.isort",
      "ms-toolsai.jupyter",
      "github.copilot",
      "github.copilot-chat",
      "codeium.codeium",
      "continue.continue",
      "tabnine.tabnine-vscode",
      "aiXcoder.aiXcoder",
      "codegpt.codegpt",
      "ms-vscode.vscode-ai",
      "google.generative-ai-studio",
      "anthropic.claude-dev",
      "github.vscode-github-actions",
      "ms-vscode-remote.remote-containers",
      "ms-azuretools.vscode-docker",
      "redhat.vscode-yaml",
      "esbenp.prettier-vscode",
      "bradlc.vscode-tailwindcss",
      "ms-vscode.rest-client",
      "rangav.vscode-thunder-client",
      "ryanluker.vscode-coverage-gutters",
      "streetsidesoftware.code-spell-checker",
      "pkief.material-icon-theme",
      "github.github-vscode-theme",
      "ms-vscode.vscode-json",
      "ms-vscode-remote.remote-ssh",
      "ms-vscode-remote.remote-wsl",
      "ms-vscode.remote-explorer",
      "ms-vscode.hexeditor",
      "ms-vscode-remote.vscode-remote-extensionpack",
      "donjayamanne.githistory",
      "eamodio.gitlens",
      "mhutchie.git-graph",
      "github.vscode-pull-request-github",
      "ms-vscode.live-server",
      "humao.rest-client",
      "formulahendry.code-runner",
      "christian-kohler.path-intellisense",
      "visualstudioexptteam.vscodeintellicode",
      "ms-python.debugpy",
      "bierner.markdown-mermaid",
      "bierner.markdown-preview-github-styles",
      "davidanson.vscode-markdownlint",
      "yzhang.markdown-all-in-one"
    ]
  }
}
