# AutoPR Pre-commit Configuration
# Workflow for all quality checks
#
# COMMIT BLOCKING BEHAVIOR:
# - Bandit: Only blocks on HIGH severity issues (--exit-zero flag)
# - Ruff: Ignores line length and whitespace issues (E501, W503)
# - Quality Engine: Uses --warn-only flag for non-critical issues
# - MyPy: Only blocks on critical type errors
#
# To make commits more permissive:
# - Remove --exit-zero from bandit args
# - Remove --warn-only from quality-engine args
# - Remove --ignore flags from ruff args
#
# To make commits more strict:
# - Add --exit-non-zero-on-fix to ruff-format
# - Remove --ignore-missing-imports from mypy
# - Add --strict to quality-engine args

repos:
  # Basic formatting (fast)
  - repo: https://github.com/psf/black
    rev: 24.1.1
    hooks:
      - id: black
        args: [--line-length=100]

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black]

  # Prettier for JSON, YAML, Markdown formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [json, yaml, markdown]
        args: [--prose-wrap=always, --print-width=100]

  # Custom hook to handle unstaged changes after Prettier
  # Temporarily disabled to avoid patch conflicts
  # - repo: local
  #   hooks:
  #     - id: handle-unstaged-changes
  #       name: Handle Unstaged Changes
  #       entry: python tools/pre-commit-hooks.py
  #       language: system
  #       stages: [pre-commit]
  #       verbose: true
  #       pass_filenames: false
  #       # Run after prettier to handle any formatting changes
  #       additional_dependencies: []

  # Quality Engine - Fast mode for pre-commit
  - repo: local
    hooks:
      - id: quality-engine-fast
        name: AutoPR Quality Engine (Fast Mode)
        entry: python -m autopr.actions.quality_engine
        language: system
        types: [python]
        args: [--mode=fast, --skip-windows-check, --warn-only]
        stages: [pre-commit]
        verbose: true
        pass_filenames: true
        description: "Run fast quality checks on Python files"

  # Individual tool hooks for specific checks
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.3.0
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix, --ignore=E501, W503]
        stages: [manual]
      - id: ruff-format

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --show-error-codes]
        stages: [manual]

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, ., -c, .bandit, --exit-zero]
        exclude: |
          (?x)^(
              .*/__tests__/.*|
              .*/tests/.*|
              .*/test_.*\.py|
              .*_test\.py
          )$
        pass_filenames: false
